# Ивашкевич Борис - “TGW. Pro Life Balance.”
# Пользовательские сценарии


### Группа: 10 - МИ - 3
### Электронная почта:  boris141201@gmail.com
### VK:  [vk.com/borkin_adres](https://vk.com/borkin_adres)

**[ Сценарий 1 - Первый запуск. Заполнение матрицы.]**

Пользователь открывает программу в первый раз
Пользователь читает инструкцию по заполнению матрицы
Пользователь нажимает кнопку “OK”
Программа пишет, что подразумевается под вектором “Любовь” и выводит форму для заполнения числом и  кнопку “Далее”.
Пользователь вводит свою оценку удовлетворенности данным вектором в его жизни от 1 до 10 в форму
Пользователь нажимает кнопку “Далее”
Программа пишет, что подразумевается под вектором “Благосостояние” и выводит форму для заполнения числом и  кнопку “Далее”..
Пользователь вводит свою оценку удовлетворенности данным вектором в его жизни от 1 до 10 в форму
Пользователь нажимает кнопку “Далее”
Программа пишет, что подразумевается под вектором “Хобби” и выводит форму для заполнения числом и  кнопку “Далее”.
Пользователь вводит свою оценку удовлетворенности данным вектором в его жизни от 1 до 10 в форму
Пользователь нажимает кнопку “Далее”
Программа пишет, что подразумевается под вектором “Друзья” и выводит форму для заполнения числом и  кнопку “Далее”.
Пользователь вводит свою оценку удовлетворенности данным вектором в его жизни от 1 до 10 в форму
Пользователь нажимает кнопку “Далее”
Программа пишет, что подразумевается под вектором “Здоровье” и выводит форму для заполнения числом и  кнопку “Далее”.
Пользователь вводит свою оценку удовлетворенности данным вектором в его жизни от 1 до 10 в форму
Пользователь нажимает кнопку “Далее”
Программа пишет, что подразумевается под вектором “Работа/Основной род деятельности” и выводит форму для заполнения числом и  кнопку “Далее”.
Пользователь вводит свою оценку удовлетворенности данным вектором в его жизни от 1 до 10 в форму
Пользователь нажимает кнопку “Далее”
Программа составляет матрицу из 6 введённых параметров и переводит пользователя в основное окно, в котором данная матрица видная

**[ Сценарий 2 - Первый запуск. Добавление векторов.]**

После заполнения матрицы программа предлагает добавить свои векторы в матрицу
На экран выводятся кнопки “Добавить” и “Пропустить”
Пользователь нажимает на кнопку “Добавить”
Пользователь вводит название вектора __//например “Религия”__
Пользователь оценивает свою удовлетворенность данным вектором от 1 до 10
Пользователю предлагается “Ввести противопоставленный данному вектор” или “Пропустить”
Пользователь вводит противопоставленный вектор __//например “Имидж”__
Пользователь оценивает свою удовлетворенность данным вектором от 1 до 10
На экран выводятся кнопки “Добавить” и “Пропустить”
Пользователь нажимает на кнопку “Добавить” и повторяет процедуру, либо “Пропустить” и переходит далее

**[ Сценарий 3 - Первый запуск. Дробление векторов. Создание подматриц.]**

После завершения составления матриц программа предлагает пользователю разбить вектора на подвектора.
Пользователя переносит в раздел первого вектора __//по умолчанию “Любовь”__
На экран выводятся кнопки “Добавить” и “Пропустить”
Пользователь нажимает “Добавить”
Пользователь вводит название подвектора __//Например, для любви “Родители” или “Девушка”
Пользователь оценивает свою удовлетворенность данным подвектором от 1 до 10
На экран выводятся кнопки “Добавить ещё” и “Далее”
Пользователь нажимает на “Добавить ещё”
Далее происходят заново пункты 5-7 до тех пор, пока пользователь не нажмет кнопку “Далее”
Пользователь нажимает “Далее”
На экран выводится подматрица аналогичная главной матрице с подвекторами и кнопка “Далее”
Пользователь нажимает “Далее”
Пользователя переносит в раздел следующего вектора
Далее повторяются пункты 3-11 для каждого из векторов


**[ Сценарий 4 - Ежемесячное перезаполнение матрицы.]**

Проходит месяц после первого запуска
Пользователь получает уведомление необходимости перевыполнения
Пользователь переходит в программу
Пользователя переносит в раздел первого вектора
Программа предлагает автоматического изменения оценки подвекторов, опираясь на статистику
Если пользователь в чем-то не согласен с программой, то он по очереди даёт актуальную оценку всем подвекторам в векторе
Программа предлагает автоматического изменения оценки вектора, опираясь на статистику
Если пользователь в чем-то не согласен с программой, то он даёт актуальную оценку самому вектору
Далее повторяются пункты 4-6 со всеми векторами
Пользователю открывается окно статистики

**[ Сценарий 5 - Добавление векторов]**

Пользователь открывает главную страницу с матрицей
Пользователь нажимает на кнопку “Редактировать матрицу”
Открывается режим редактирования
На экран выводятся кнопки “Добавить вектор” и “Готово”
Пользователь нажимает на кнопку “Добавить вектор”
Пользователь вводит название вектора
Пользователь оценивает свою удовлетворенность данным вектором от 1 до 10
Пользователю предлагается “Ввести противопоставленный данному вектор” или “Пропустить”
Пользователь вводит противопоставленный вектор
Пользователь оценивает свою удовлетворенность данным вектором от 1 до 10
Пользователь возвращается к уже изменениями
Пользователь нажимает на кнопку “Добавить вектор” и повторяет процедуру, либо “Готово” и заканчивает

**[ Сценарий 6 - Изменение оценки векторов.]** 

Пользователь открывает главную страницу с матрицей
Пользователь нажимает на кнопку “Редактировать матрицу”
Открывается режим редактирования
На экран выводятся кнопки “Добавить вектор” и “Готово”
Пользователь нажимает на иконку нужного вектора
Открывается меню изменения вектора
На экран выводятся кнопки “Изменить оценку”, “Изменить название”, “Удалить” и “Добавить противопоставленный”
Пользователь нажимает “Изменить оценку”
Пользователь оценивает свою удовлетворенность данным вектором от 1 до 10
Пользователь нажимает кнопку “Готово” и заканчивает

**[ Сценарий 7 - Изменение названия векторов.]** 

Пользователь открывает главную страницу с матрицей
Пользователь нажимает на кнопку “Редактировать матрицу”
Открывается режим редактирования
На экран выводятся кнопки “Добавить вектор” и “Готово”
Пользователь нажимает на иконку нужного вектора
Открывается меню изменения вектора
На экран выводятся кнопки “Изменить оценку”, “Изменить название”, “Удалить” и “Добавить противопоставленный”
Пользователь нажимает “Изменить название”
Пользователь вводит новое название вектора
Пользователь нажимает кнопку “Готово” и заканчивает

**[ Сценарий 8 - Удаление векторов.]** 

Пользователь открывает главную страницу с матрицей
Пользователь нажимает на кнопку “Редактировать матрицу”
Открывается режим редактирования
На экран выводятся кнопки “Добавить вектор” и “Готово”
Пользователь нажимает на иконку нужного вектора
Открывается меню изменения вектора
На экран выводятся кнопки “Изменить оценку”, “Изменить название”, “Удалить” и “Добавить противопоставленный”
Пользователь нажимает “Удалить”
Выводится предупреждение я просьба подтвердить свои действия
Пользователь подтверждает свои действия
Вектор удаляется
Если у вектора есть противопоставленный вектор, то пользователю предлагается удалить и его
Пользователь удаляет противопоставленный вектор
Выводится предупреждение я просьба подтвердить свои действия
Пользователь подтверждает свои действия
Вектор удаляется
Пользователь нажимает кнопку “Готово” и заканчивает



**[ Сценарий 9 - Изменение подматриц.]**

Пользователь открывает главную страницу с матрицей
Пользователь нажимает на иконку нужного вектора
Пользователя переносит в раздел выбранного вектора
Пользователь нажмите на кнопку “Редактировать”
Далее действия совершаются аналогично со Сценариями 5-8


**[ Сценарий 10 - Планирование действий для улучшение жизни.]**

Пользователь открывает главную страницу с матрицей
Пользователь нажимает на иконку нужного вектора
Пользователя переносит в раздел выбранного вектора
Пользователь нажимает на кнопку “Запланировать действие”
Пользователь вводит название и описание действия
Пользователь заполняет форму “Как это сделать?”
Пользователь отмечает все подвектора, с которыми это действие связано (если связано)
Пользователь дублирует данное действие в другой вектор и его подвектор, нажав на кнопку и выбрав вектор/подвектор (при необходимости)
Пользователь может отметить данное действие как важное
Пользователь нажимает кнопку “Готово” и заканчивает



**[ Сценарий 11 - Ежедневный отчет.]**

В конце каждого дня пользователь заходит в раздел “Планы”
На экран выводится список запланированных несовершенных дел
Пользователь нажимает на кнопку “Завершено” рядом с завершенным делом
Пользователь оценивает, насколько важным было действие по его мнению от -10 до 10
Пользователь отмечает, какие вектора и подвектора затронуло действие
Действие отправляется в раздел “Дневник совершенных дел”
Пользователь нажимает на кнопку “Добавить”
Пользователь пишет название и описание нового совершенного действия
Пользователь оценивает, насколько важным было действие по его мнению от -10 до 10
Пользователь отмечает, какие вектора и подвектора затронуло действие
Действие отправляется в раздел “Дневник совершенных дел”


**[ Сценарий 12 - Опекун. Все 10.]**

Пользователь оценил все вектора на 10
Программа спрашивает, уверен ли он в этом
Пользователь подтверждает свои действия
Программа выводит ему предупреждение и просьбу “Не врать самому себе”
Программа спрашивает, уверен ли он в своей оценке
Пользователь подтверждает свои действия
Программа выводит на экран надпись “Поздравляю, нам нечего вам предложить, вы единственный идеальный человек на Земле!” и кнопку “Попробовать снова”
Пользователь нажимает на кнопку “Попробовать снова”
Далее происходит Сценарий 1


**[ Сценарий 13 - Опекун. Баланс. Всё плохо.]**

Пользователь ввёл показатели, в которых максимальная дельта превышает 4
Программа предлагает пользователю написать список вещей, которые его не устраивают во всех заниженных векторах
Далее все пункты списка автоматически превращаются в Планируемые действия
Пользователь по очереди заходит в редактирование действия
Пользователь добавляет описание
Пользователь заполняет форму “Как это сделать?”
Пользователь отмечает все подвектора, с которыми это действие связано (если связано)
Пользователь дублирует данное действие в другой вектор и его подвектор, нажав на кнопку и выбрав вектор/подвектор (при необходимости)
Пользователь может отметить данное действие как важное
Программа предлагает пользователю уделять меньше внимания векторам с завышенными показателям
Программа напоминает пользователю о важности каждого из векторов
Программа предлагает пользователю список литературы для улучшения жизни


**[ Сценарий 14 - Опекун. Баланс есть.]**

Если максимальная дельта составляет 1-2, то Программа предлагает пользователю начать плавно улучшать свою жизнь
Сначала предлагается сделать упор на самое маленькое по оценке
Если есть вектора с одинаковой минимальной оценкой, то самое уязвимое вычисляется исходя из количества совершенных для его улучшения дел
Пользователь составляет план для улучшения самых страдающих векторов по аналогии с предыдущими сценариями
Пользователь выполняет запланированные действия
Пользователь выполняет процедуру ведения дневника совершенных дел
Программа вычисляет, на что надо сделать упор далее, исходя из введённых данных



